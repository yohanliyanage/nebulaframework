<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  Copyright (C) 2008 Yohan Liyanage. 
  
  Licensed under the Apache License, Version 2.0 (the "License"); 
  you may not use this file except in compliance with the License. 
  You may obtain a copy of the License at 
  http://www.apache.org/licenses/LICENSE-2.0
  Unless required by applicable law or agreed to in writing, software 
  distributed under the License is distributed on an "AS IS" BASIS, 
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
  See the License for the specific language governing permissions and 
  limitations under the License.
 -->
 
 <!-- GridNode Configuration -->
 
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:amq="http://activemq.apache.org/schema/core"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
		http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.1.0.xsd">
	
	<!-- Enable AspectJ Load Time Weaver -->
	<context:load-time-weaver/>
	
	<!-- Client Connection Factory -->
	<bean id="jmsConnectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
		<property name="targetConnectionFactory">
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL" value="${cluster.service}" />
				<property name="prefetchPolicy">
					<amq:prefetchPolicy queuePrefetch="1" />
				</property>
			</bean>
		</property>
		<property name="sessionCacheSize" value="2" />
	</bean>
	<!-- <amq:connectionFactory id="jmsConnectionFactory" brokerURL="${cluster.service}" />  -->

	<!-- Local Node Instance -->
	<bean id="localNode" class="org.nebulaframework.grid.cluster.node.GridNode" factory-method="createNode">
		<constructor-arg>
			<!-- Create Grid Node Profile -->
			<bean class="org.nebulaframework.grid.cluster.node.GridNodeProfileImpl">
				<property name="architecture" value="${os.arch}" />
				<property name="OSName" value="${os.name}" />
				<property name="javaVersion" value="${java.version}" />
				<property name="javaVendor" value="${java.vendor}" />
				<property name="name" value="${net.name}" />
				<property name="ipAddress" value="${net.ip}" />
			</bean>
		</constructor-arg>
		<property name="nodeRegistrationService"> 
			<!-- (Remote) Registration Service AP -->
			<bean class="org.nebulaframework.grid.cluster.node.services.registration.NodeRegistrationServiceImpl">
				<constructor-arg ref="localNode" />
				<property name="clusterRegistrationService">
					<bean class="org.springframework.jms.remoting.JmsInvokerProxyFactoryBean">
						<property name="serviceInterface" value="org.nebulaframework.grid.cluster.manager.services.registration.ClusterRegistrationService" />
						<property name="connectionFactory" ref="jmsConnectionFactory" />
						<property name="queueName" value="nebula.cluster.registration.queue" />
					</bean>
				</property>
			</bean>
		</property>
		<property name="servicesFacade">
			<!-- (Remote) Cluster Services Facade Access Point -->
			<bean class="org.springframework.jms.remoting.JmsInvokerProxyFactoryBean">
				<property name="serviceInterface" value="org.nebulaframework.grid.cluster.manager.services.facade.ClusterManagerServicesFacade" />
				<property name="connectionFactory" ref="jmsConnectionFactory" />
				<property name="queueName" value="nebula.cluster.services.facade.queue" />
			</bean>		
		</property>
		<property name="jobSubmissionService">
			<!-- Job Execution Service -->
			<bean class="org.nebulaframework.grid.cluster.node.services.job.submission.JobSubmissionServiceImpl">
				<constructor-arg ref="localNode" />
				<property name="connectionFactory" ref="jmsConnectionFactory" />
			</bean>		
		</property>		
		<property name="connectionFactory" ref="jmsConnectionFactory" />
		<property name="clusterUrl" value="${cluster.service}" />
		<property name="serviceMessageSupport" ref="serviceMessageSupport" />
	</bean>
	
	<!-- Service Message Support -->
	<bean id="serviceMessageSupport" class="org.nebulaframework.grid.cluster.node.services.message.NodeServiceMessageSupportImpl">
	</bean>

	<!-- Message Listener for Service Topic -->
	<bean class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="jmsConnectionFactory" />
		<property name="messageListener">
			<bean class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
				<property name="delegate" ref="serviceMessageSupport" />
				<property name="defaultListenerMethod" value="onServiceMessage" />
			</bean>
		</property>
		<property name="destinationName" value="nebula.cluster.service.topic" />
		<property name="pubSubDomain" value="true" />
	</bean>
</beans>
