<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  Copyright (C) 2008 Yohan Liyanage. 
  
  Licensed under the Apache License, Version 2.0 (the "License"); 
  you may not use this file except in compliance with the License. 
  You may obtain a copy of the License at 
  http://www.apache.org/licenses/LICENSE-2.0
  Unless required by applicable law or agreed to in writing, software 
  distributed under the License is distributed on an "AS IS" BASIS, 
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
  See the License for the specific language governing permissions and 
  limitations under the License.
 -->
 
<!--  ClusterManager Spring Configuration  -->
 
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:amq="http://activemq.apache.org/schema/core"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
		http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.1.0.xsd">

	<!-- External Configuration File Location -->
	<context:property-placeholder location="file:nebula-cluster.properties" />

	<!-- Enable AspectJ Load Time Weaver -->
	<context:load-time-weaver/>
	
	<!-- Embedded ActiveMQ Broker -->
	<amq:broker persistent="false" useJmx="false">
		<amq:transportConnectors>
			<amq:transportConnector uri="${cluster.serviceUrl}" />
		</amq:transportConnectors>
	</amq:broker>
 	
	<!-- JMS Connection Factory -->
	<amq:connectionFactory id="jmsConnectionFactory" brokerURL="${cluster.serviceUrl}" />

	<!-- ClusterManager -->
	<bean id="clusterManager" class="org.nebulaframework.core.grid.cluster.manager.ClusterManager">
		<property name="clusterRegistrationService" ref="clusterRegistrationService" />
		<property name="serviceMessageSender">
			<!-- ServiceMessageSender Service -->
			<bean class="org.nebulaframework.core.grid.cluster.manager.services.messaging.ServiceMessageSenderImpl">
				<property name="jmsTemplate">
					<bean class="org.springframework.jms.core.JmsTemplate">
						<property name="connectionFactory" ref="jmsConnectionFactory" />
						<property name="defaultDestination">
							<!-- Create Service Topic for ClusterManager -->
							<amq:topic physicalName="nebula.cluster.service.topic" />						
						</property>
					</bean>
				</property>
			</bean>
		</property>
		<property name="jobService" ref="clusterJobService" />
		<property name="brokerUrl" value="${cluster.serviceUrl}" />
		<property name="connectionFactory" ref="jmsConnectionFactory" />
	</bean>

	<!-- Cluster Job Service -->
	<bean id="clusterJobService" class="org.nebulaframework.core.grid.cluster.manager.services.jobs.ClusterJobServiceImpl">
		<constructor-arg ref="clusterManager" />
		<property name="jmsSupport">
			<!-- JMSSupport Reference -->
			<bean class="org.nebulaframework.core.grid.cluster.manager.services.jobs.JobServiceJmsSupport">
				<property name="connectionFactory"
					ref="jmsConnectionFactory" />
			</bean>
		</property>
		<property name="splitterService">
			<!-- Splitter Service -->
			<bean class="org.nebulaframework.core.grid.cluster.manager.services.jobs.splitter.SplitterServiceImpl">
				<constructor-arg ref="clusterJobService" />
				<property name="connectionFactory" ref="jmsConnectionFactory" />
			</bean>
		</property>
		<property name="aggregatorService">
			<!-- Aggregator Service -->
			<bean class="org.nebulaframework.core.grid.cluster.manager.services.jobs.aggregator.AggregatorServiceImpl">
				<constructor-arg ref="clusterJobService" />
				<property name="connectionFactory" ref="jmsConnectionFactory" />
			</bean>
		</property>				
	</bean>
	
	<!-- Cluster Registration Service -->
	<bean id="clusterRegistrationService" class="org.nebulaframework.core.grid.cluster.manager.services.registration.ClusterRegistrationServiceImpl">
		<constructor-arg ref="clusterManager" />
		<property name="connectionFactory" ref="jmsConnectionFactory" />
	</bean>
					
	<!-- JMS Remoting for Cluster Registration Service-->
	<bean class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="jmsConnectionFactory" />
		<property name="destination">
			<amq:queue physicalName="nebula.cluster.registration.queue" />
		</property>
		<property name="messageListener">
			<bean
				class="org.springframework.jms.remoting.JmsInvokerServiceExporter">
				<property name="serviceInterface" value="org.nebulaframework.core.grid.cluster.manager.services.registration.ClusterRegistrationService" />
				<property name="service" ref="clusterRegistrationService" />
			</bean>
		</property>
	</bean>

	<!-- JMS Remoting for Cluster Services Facade-->
	<bean class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="jmsConnectionFactory" />
		<property name="destination">
			<amq:queue physicalName="nebula.cluster.services.facade.queue"/>
		</property>
		<property name="messageListener">
			<bean class="org.springframework.jms.remoting.JmsInvokerServiceExporter">
				<property name="serviceInterface" value="org.nebulaframework.core.grid.cluster.manager.services.facade.ClusterManagerServicesFacade" />
				<property name="service">
					<bean class="org.nebulaframework.core.grid.cluster.manager.services.facade.ClusterManagerServicesFacadeImpl">
						<constructor-arg ref="clusterManager" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>
</beans>
