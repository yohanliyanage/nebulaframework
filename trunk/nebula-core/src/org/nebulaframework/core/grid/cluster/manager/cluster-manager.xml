<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:amq="http://activemq.apache.org/schema/core"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
		http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.1.0.xsd">

	<!-- External Configuration File Location -->
	<context:property-placeholder location="nebula-cluster.properties" />

	<!-- Embedded ActiveMQ Broker -->
	
	<amq:broker persistent="false" useJmx="false">
		<amq:transportConnectors>
			<amq:transportConnector uri="${cluster.serviceUrl}" />
		</amq:transportConnectors>
	</amq:broker>
 	
	<!-- JMS Connection Factory -->
	<amq:connectionFactory id="jmsConnectionFactory" brokerURL="${cluster.serviceUrl}" />

	<!-- ClusterManager -->
	<bean id="clusterManager" class="org.nebulaframework.core.grid.cluster.manager.ClusterManager">
		<property name="clusterRegistrationService" ref="clusterRegistrationService" />
		<property name="serviceMessageSender">
			<bean class="org.nebulaframework.core.grid.cluster.manager.services.messaging.ServiceMessageSenderImpl">
				<property name="jmsTemplate">
					<bean class="org.springframework.jms.core.JmsTemplate">
						<property name="connectionFactory" ref="jmsConnectionFactory" />
						<property name="defaultDestination">
							<!-- Create Service Topic for ClusterManager -->
							<amq:topic physicalName="nebula.cluster.service.topic" />						
						</property>
					</bean>
				</property>
			</bean>
		</property>
		<property name="jobService" ref="clusterJobService" />
		<property name="brokerUrl" value="${cluster.serviceUrl}" />
		<property name="connectionFactory" ref="jmsConnectionFactory" />
	</bean>

	<!-- Cluster Job Service -->
	<bean id="clusterJobService" class="org.nebulaframework.core.grid.cluster.manager.services.jobs.ClusterJobServiceImpl">
		<constructor-arg ref="clusterManager" />
		<property name="jmsSupport">
			<bean class="org.nebulaframework.core.grid.cluster.manager.services.jobs.support.JMSSupport">
				<property name="connectionFactory"
					ref="jmsConnectionFactory" />
			</bean>
		</property>
		<property name="splitterService">
			<bean class="org.nebulaframework.core.grid.cluster.manager.services.jobs.splitter.SpliterServiceImpl">
				<property name="connectionFactory" ref="jmsConnectionFactory" />
			</bean>
		</property>
		<property name="aggregatorService">
			<bean class="org.nebulaframework.core.grid.cluster.manager.services.jobs.aggregator.AggregatorServiceImpl">
				<constructor-arg ref="clusterJobService" />
				<property name="connectionFactory" ref="jmsConnectionFactory" />
			</bean>
		</property>				
	</bean>
	
	<!-- Cluster Registration Service -->
	<bean id="clusterRegistrationService" class="org.nebulaframework.core.grid.cluster.manager.services.registration.ClusterRegistrationServiceImpl">
		<constructor-arg ref="clusterManager" />
		<property name="connectionFactory" ref="jmsConnectionFactory" />
	</bean>
					
	<!-- JMS Remoting for Cluster Registration Service-->
	<bean class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="jmsConnectionFactory" />
		<property name="destination">
			<amq:queue physicalName="nebula.cluster.registration.queue" />
		</property>
		<property name="messageListener">
			<bean
				class="org.springframework.jms.remoting.JmsInvokerServiceExporter">
				<property name="serviceInterface" value="org.nebulaframework.core.grid.cluster.manager.services.registration.ClusterRegistrationService" />
				<property name="service" ref="clusterRegistrationService" />
			</bean>
		</property>
	</bean>

	<!-- JMS Remoting for Cluster Services Facade-->
	<bean class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="jmsConnectionFactory" />
		<property name="destination">
			<amq:queue physicalName="nebula.cluster.services.facade.queue"/>
		</property>
		<property name="messageListener">
			<bean class="org.springframework.jms.remoting.JmsInvokerServiceExporter">
				<property name="serviceInterface" value="org.nebulaframework.core.grid.cluster.manager.services.facade.ClusterManagerServicesFacade" />
				<property name="service">
					<bean class="org.nebulaframework.core.grid.cluster.manager.services.facade.ClusterManagerServicesFacadeImpl">
						<constructor-arg ref="clusterManager" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>
</beans>
