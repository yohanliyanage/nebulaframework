<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:amq="http://activemq.apache.org/schema/core"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
		http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.1.0.xsd">

	<context:property-placeholder location="nebula-client.properties" />

	<!-- Enable AspectJ Load Time Weaver -->
	<context:load-time-weaver/>
	
	<!-- Client Connection Factory -->
	<amq:connectionFactory id="jmsConnectionFactory" brokerURL="${cluster.url}" />

	<!-- Local Node Instance -->
	<bean id="localNode" class="org.nebulaframework.core.grid.cluster.node.GridNode">
		<constructor-arg>
			<!-- Create Grid Node Profile -->
			<bean class="org.nebulaframework.core.grid.cluster.node.GridNodeProfileImpl">
				<property name="clockSpeed" value="2000" />
				<property name="memory" value="2048" />
				<property name="name" value="Link" />
				<property name="processor" value="Intel Core Duo T2500" />
				<property name="OS" value="Microsoft Windows XP SP2" />
			</bean>
		</constructor-arg>
		<property name="nodeRegistrationService"> 
			<!-- (Remote) Registration Service AP -->
			<bean class="org.nebulaframework.core.grid.cluster.node.services.registration.NodeRegistrationServiceImpl">
				<constructor-arg ref="localNode" />
				<property name="clusterRegistrationService">
					<bean class="org.springframework.jms.remoting.JmsInvokerProxyFactoryBean">
						<property name="serviceInterface" value="org.nebulaframework.core.grid.cluster.manager.services.registration.ClusterRegistrationService" />
						<property name="connectionFactory" ref="jmsConnectionFactory" />
						<property name="queueName" value="nebula.cluster.registration.queue" />
					</bean>
				</property>
			</bean>
		</property>
		<property name="servicesFacade">
			<!-- (Remote) Cluster Services Facade Access Point -->
			<bean class="org.springframework.jms.remoting.JmsInvokerProxyFactoryBean">
				<property name="serviceInterface" value="org.nebulaframework.core.grid.cluster.manager.services.facade.ClusterManagerServicesFacade" />
				<property name="connectionFactory" ref="jmsConnectionFactory" />
				<property name="queueName" value="nebula.cluster.services.facade.queue" />
			</bean>		
		</property>
		<property name="jobExecutionService">
			<!-- Job Execution Service -->
			<bean class="org.nebulaframework.core.grid.cluster.node.services.job.execution.JobExecutionServiceImpl">
				<constructor-arg ref="localNode" />
				<property name="connectionFactory" ref="jmsConnectionFactory" />
			</bean>		
		</property>
		<property name="jobSubmissionService">
			<!-- Job Execution Service -->
			<bean class="org.nebulaframework.core.grid.cluster.node.services.job.submission.JobSubmissionServiceImpl">
				<constructor-arg ref="localNode" />
				<property name="connectionFactory" ref="jmsConnectionFactory" />
			</bean>		
		</property>		
		<property name="connectionFactory" ref="jmsConnectionFactory" />
		<property name="serviceMessageSupport" ref="serviceMessageSupport" />
	</bean>
	
	<!-- Service Message Support -->
	<bean id="serviceMessageSupport" class="org.nebulaframework.core.grid.cluster.node.services.message.ServiceMessageSupportImpl">
		<constructor-arg ref="localNode" />
	</bean>

	<!-- Message Listener for Service Topic -->
	<bean class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="jmsConnectionFactory" />
		<property name="messageListener">
			<bean class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
				<property name="delegate" ref="serviceMessageSupport" />
				<property name="defaultListenerMethod" value="onServiceMessage" />
			</bean>
		</property>
		<property name="destinationName" value="nebula.cluster.service.topic" />
		<property name="pubSubDomain" value="true" />
	</bean>
</beans>
